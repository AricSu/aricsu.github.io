import type { AvailableLanguage, BooleanString, InputPosition, Loading, Mapping, Repo, Theme } from './types';
declare const _default: import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<{
    id?: string | undefined;
    host?: string | undefined;
    repo: Repo;
    repoId: string;
    category?: string | undefined;
    categoryId?: string | undefined;
    mapping: Mapping;
    term?: string | undefined;
    theme?: Theme | undefined;
    strict?: BooleanString | undefined;
    reactionsEnabled?: BooleanString | undefined;
    emitMetadata?: BooleanString | undefined;
    inputPosition?: InputPosition | undefined;
    lang?: AvailableLanguage | undefined;
    loading?: Loading | undefined;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    id?: string | undefined;
    host?: string | undefined;
    repo: Repo;
    repoId: string;
    category?: string | undefined;
    categoryId?: string | undefined;
    mapping: Mapping;
    term?: string | undefined;
    theme?: Theme | undefined;
    strict?: BooleanString | undefined;
    reactionsEnabled?: BooleanString | undefined;
    emitMetadata?: BooleanString | undefined;
    inputPosition?: InputPosition | undefined;
    lang?: AvailableLanguage | undefined;
    loading?: Loading | undefined;
}>>>, {}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
