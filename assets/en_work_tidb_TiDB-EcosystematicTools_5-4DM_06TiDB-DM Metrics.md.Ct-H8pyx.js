import{_ as t,c as o,o as r,a4 as n}from"./chunks/framework.CGsRFzUA.js";const p=JSON.parse('{"title":"Metrics","description":"","frontmatter":{},"headers":[],"relativePath":"en/work/tidb/TiDB-EcosystematicTools/5-4DM/06TiDB-DM Metrics.md","filePath":"en/work/tidb/TiDB-EcosystematicTools/5-4DM/06TiDB-DM Metrics.md"}'),s={name:"en/work/tidb/TiDB-EcosystematicTools/5-4DM/06TiDB-DM Metrics.md"};function i(a,e,l,g,c,d){return r(),o("div",null,e[0]||(e[0]=[n(`<h1 id="metrics" tabindex="-1">Metrics <a class="header-anchor" href="#metrics" aria-label="Permalink to &quot;Metrics&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><h2 id="operate-error" tabindex="-1">operate error <a class="header-anchor" href="#operate-error" aria-label="Permalink to &quot;operate error&quot;">​</a></h2><h2 id="ha" tabindex="-1">HA <a class="header-anchor" href="#ha" aria-label="Permalink to &quot;HA&quot;">​</a></h2><ol><li><p><strong>number of dm-masters start leader components per minute</strong><br><strong>a. Meaning</strong> : number of dm-masters try to start leader components per minute <strong>b. Colculation</strong> :</p></li><li><p><strong>number of workers in different state</strong><br><strong>a. Meaning</strong> : number of workers in different state <strong>b. Colculation</strong> :</p></li><li><p><strong>workers&#39; state</strong><br><strong>a. Meaning</strong> : workers&#39; state<br><strong>b. Colculation</strong> :</p></li><li><p><strong>number of worker event error</strong><br><strong>a. Meaning</strong> : number of worker event error<br><strong>b. Colculation</strong> :</p></li><li><p><strong>shard ddl error per minute</strong><br><strong>a. Meaning</strong> : number of shard DDL lock/operation error in one minute<br><strong>b. Colculation</strong> : In <code>pressimism</code>,</p></li><li><p>. <strong>number of pending shard ddl</strong><br><strong>a. Meaning</strong> : number of pending shard DDL in different states, Un-synced (waiting all upstream), Synced (all upstream finished, waiting all downstream). It has three different types of DDL job, including <code>None</code>, <code>Un-synced</code>, <code>Synced</code>. The metrics will change the one type when every new Lock generates(<code>None</code> --&gt; <code>Un-synced</code>, like <code>NewLock</code> in <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/pkg/shardddl/pessimism/lock.go#L45" target="_blank" rel="noreferrer">pessimism</a>) or releases(<code>Un-synced</code> --&gt; <code>Synced</code>).<br><strong>b. Colculation</strong> : In <code>pressimism</code>, when every etcd-input trigged by DM-Workers is captured, if <code>remian of Lock &gt;0</code>,which means there are at least one source who hasn&#39;t received the DDL from MySQL Binlog, the &quot;OperationPut - LockUnSyncedError&quot; will be added,<a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/master/shardddl/pessimist.go#L525" target="_blank" rel="noreferrer">details at here</a>. if the DDL lock has synced ,first it will be marked as done and try to remove the operation for the source, meanwhile, if the delete failed, a &quot;OperationPut - RemoveLockError&quot; will be added, <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/master/shardddl/pessimist.go#L538" target="_blank" rel="noreferrer">more detail</a>. In <code>pressimism</code>,</p></li></ol><h2 id="task" tabindex="-1">task <a class="header-anchor" href="#task" aria-label="Permalink to &quot;task&quot;">​</a></h2><ol><li><strong>task state</strong><br><strong>a. Meaning</strong> :The current state of the subtask in the instance<br><strong>b. Colculation</strong> :</li></ol><h2 id="load-dump-files" tabindex="-1">load dump files <a class="header-anchor" href="#load-dump-files" aria-label="Permalink to &quot;load dump files&quot;">​</a></h2><ol><li><p><strong>load progress</strong><br><strong>a. Meaning</strong> : The data import process percentage of Loader. The value range is 0% ~ 100%. <strong>b. Colculation</strong> :</p></li><li><p><strong>data file size</strong><br><strong>a. Meaning</strong> : The total size of the data files in the full data imported by Loader (including the <code>INSERT INTO</code> statement). <strong>b. Colculation</strong> :</p></li><li><p><strong>dump process exits with error</strong><br><strong>a. Meaning</strong> : Dumper encounters an error within the DM-worker and exits. <strong>b. Colculation</strong> :</p></li><li><p><strong>load process exits with error</strong><br><strong>a. Meaning</strong> : Loader encounters an error within the DM-worker and exits. <strong>b. Colculation</strong> :</p></li><li><p><strong>table count</strong><br><strong>a. Meaning</strong> : The total number of tables in the full data imported by Loader. <strong>b. Colculation</strong> :</p></li><li><p><strong>data file count</strong><br><strong>a. Meaning</strong> : The total number of data files in the full data imported by Loader (including the <code>INSERT INTO</code> statement). <strong>b. Colculation</strong> :</p></li><li><p><strong>transaction execution latency</strong><br><strong>a. Meaning</strong> : The duration that Loader executes a transaction (in seconds). <strong>b. Colculation</strong> :</p></li><li><p><strong>statement execution latency - 90</strong><br><strong>a. Meaning</strong> : The time it takes loader to execute every statement to the downstream (in seconds). <strong>b. Colculation</strong> :</p></li></ol><h2 id="binlog-replication" tabindex="-1">binlog replication <a class="header-anchor" href="#binlog-replication" aria-label="Permalink to &quot;binlog replication&quot;">​</a></h2><ol><li><p><strong>remaining time to sync</strong><br><strong>a. Meaning</strong> :<br><strong>b. Colculation</strong> : it&#39;s calculated by expr below:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    remainingSize =</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">remainingSeconds = ---------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    bytesPerSec  =  (totalBinlogSize - lastBinlogSize) / seconds</span></span></code></pre></div></li><li><p><strong>replicate lag</strong><br><strong>a. Meaning</strong> : The latency time it takes to replicate the binlog from master to Syncer (in seconds)<br><strong>b. Colculation</strong> : In this <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/syncer.go#L890" target="_blank" rel="noreferrer">func updateReplicationLagMetric</a>, the metric is updated by ticking per 100ms. the <code>lag</code> is calculated in an expression of <code>time.Now().Unix() - s.tsOffset.Load() - headerTS</code>. which <code>tsOffset</code> represents time range between upstream and syncer, DM&#39;s timestamp - MySQL&#39;s timestamp, and <code>headerTS</code> is minior timestamp,which is binlog <code>EventHeader Timestamp</code> parsed by <a href="https://github.com/go-mysql-org/go-mysql/tree/master/replication" target="_blank" rel="noreferrer">go-mysql-org/go-mysql/replication</a>, of every DM worker MySQL.</p></li><li><p><strong>process exits with error</strong><br><strong>a. Meaning</strong> : The binlog replication unit process encounters an error within the DM-worker and exits<br><strong>b. Colculation</strong> : 1</p></li><li><p><strong>binlog file gap between master and syncer</strong><br><strong>a. Meaning</strong> : The number of binlog files in binlog replication unit that are behind the master.<br><strong>b. Colculation</strong> : <strong>For <code>master</code></strong>,</p></li><li><p><strong>binlog file gap between relay and syncer</strong></p></li><li><p><strong>binlog event QPS</strong></p></li><li><p><strong>skipped binlog event QPS</strong></p></li><li><p><strong>read binlog event duration</strong></p></li><li><p><strong>transform binlog event duration</strong><br><strong>a. Meaning</strong> : The time it takes binlog replication unit to parse and transform the binlog into SQL statements (in seconds)<br><strong>b. Colculation</strong> : At <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/syncer.go#L1504" target="_blank" rel="noreferrer">func successFunc</a>, every job will have calculated the duration in DDLWorker and DMLWorker executing <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/dml_worker.go#L200" target="_blank" rel="noreferrer">func executeBatchJobs</a>, since raw binlog had tranformed into Syncer dealing loop function. And It has 90%, 95% and 99% quantile curve.</p></li><li><p><strong>dispatch binlog event duration</strong></p></li><li><p><strong>transaction execution latency</strong></p></li><li><p><strong>binlog event size</strong><br><strong>a. Meaning</strong> : The size of a single binlog event that the binlog replication unit reads from relay log or upstream master.<br><strong>b. Colculation</strong> : At <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/syncer.go#L2159" target="_blank" rel="noreferrer">here</a>, Syncer&#39;ll record every binlog event_size in event header from <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/binlogstream/streamer_controller.go#L131" target="_blank" rel="noreferrer">binlogstream</a>. So, in grafana, DM uses a type of histogram to draw a quantile curve, including 90%, 95%, 99%.</p></li><li><p><strong>DML queue remain length</strong><br><strong>a. Meaning</strong> : The remain length of DML job queues, which have <code>causality_input</code>, <code>compactor_input</code>, <code>dml_worker_input</code>, <code>q_number</code>,number is calculated in <code>queueID%defaultBucketCount</code>.<br><strong>b. Colculation</strong> : <strong>For <code>causality_input</code></strong> : Causality provides a simple mechanism to improve the concurrency of SQLs execution under the premise of ensuring correctness, which groups sqls that maybe contain causal relationships, and syncer executes them linearly, <a href="https://github.com/pingcap/tiflow/blob/211e6e7d5fa0944d1f5e0ad585cb8549d5604395/dm/docs/RFCS/20211012_async_checkpoint_flush.md#causality-optimization" target="_blank" rel="noreferrer">more details</a>. So, it records the number of causality component is keeping about rows. <strong>For <code>dml_worker_input</code></strong> : which means how many jobs were sent to DMWorker. <strong>For <code>compactor_input</code></strong> : it&#39;ll equal to the function of causality_input if you config <a href="https://docs.pingcap.com/zh/tidb/v6.6/dm-dml-replication-logic#compactor" target="_blank" rel="noreferrer">this feature</a>. <strong>For <code>q_number</code></strong> : all DMLs at <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/dml_worker.go#L100" target="_blank" rel="noreferrer">here</a> will be distributed into different queues(default 8) and when they are executed in <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/dml_worker.go#L159" target="_blank" rel="noreferrer">DMLWorker&#39;s executeJobs</a>, it&#39;ll be recorded by the queue name.</p></li><li><p><strong>total SQL jobs</strong><br><strong>a. Meaning</strong> : Is waiting shard DDL lock to be resolved, &gt;0 means waiting.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>finished SQL jobs</strong><br><strong>a. Meaning</strong> : The number of finished jobs per unit of time.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>statement execution latency - 90</strong><br><strong>a. Meaning</strong> : The time it takes binlog replication unit to execute every statement to the downstream (in seconds).<br><strong>b. Colculation</strong> :</p></li><li><p><strong>add job duration</strong><br><strong>a. Meaning</strong> : The time it takes binlog replication unit to add a job to the queue (in seconds).<br><strong>b. Colculation</strong> :</p></li><li><p><strong>DML conflict detect duration</strong><br><strong>a. Meaning</strong> : The time it takes binlog replication unit to detect conflicts between DMLs (in seconds).<br><strong>b. Colculation</strong> :</p></li><li><p><strong>skip event duration</strong><br><strong>a. Meaning</strong> : The time it takes binlog replication unit to skip a binlog event (in seconds).<br><strong>b. Colculation</strong> :</p></li><li><p><strong>unsynced tables</strong><br><strong>a. Meaning</strong> : The number of unsynced tables in the subtask.<br><strong>b. Colculation</strong> : Also at <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/ddl.go#L567" target="_blank" rel="noreferrer">here</a>, It shows that after the <code>ShardingGroupKeeper&#39;s TrySync</code> function, if it&#39;s related to sharding group tables repliation, the metrics&#39;ll be update only when you use pessmistic strategy.</p></li><li><p><strong>shard lock resolving</strong><br><strong>a. Meaning</strong> : Is waiting shard DDL lock to be resolved, &gt;0 means waiting.<br><strong>b. Colculation</strong> : This metrics is meaningful only when DM uses pessmistic shard strategy to sync a group of tables into one. At <a href="https://github.com/pingcap/tiflow/blob/c65e2b72198de10319008b31dcf13d51509ccfde/dm/syncer/ddl.go#L632" target="_blank" rel="noreferrer">here</a>, the Guage&#39;ll plus one which means the worker is blocking and waitting for DDL lock to be synced. And there&#39;ll create another goroutine to watch the <code>PUT</code> operation. I mean the stage of resolving is gonna be closed(actually It does the minus operation in the Guage).</p></li><li><p><strong>heartbeat update error</strong><br><strong>a. Meaning</strong> : Number of error happens when update heartbeat.<br><strong>b. Colculation</strong> :</p></li></ol><h2 id="relay-log" tabindex="-1">relay log <a class="header-anchor" href="#relay-log" aria-label="Permalink to &quot;relay log&quot;">​</a></h2><ol><li><p><strong>storage capacity</strong><br><strong>a. Meaning</strong> : The storage capacity of the disk occupied by the relay log.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>storage remain</strong><br><strong>a. Meaning</strong> : The remaining storage capacity of the disk occupied by the relay log.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>process exits with error</strong><br><strong>a. Meaning</strong> : The relay log encounters an error within the DM-worker and exits.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>relay log data corruption</strong><br><strong>a. Meaning</strong> : The number of corrupted relay log files.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>fail to read binlog from master</strong><br><strong>a. Meaning</strong> : The number of errors encountered when the relay log reads the binlog from the upstream MySQL.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>fail to write relay log</strong><br><strong>a. Meaning</strong> : The number of errors encountered when the relay log writes the binlog to disks.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>write relay log duration</strong><br><strong>a. Meaning</strong> : The duration that the relay log writes binlog event into the disks each time (in seconds).<br><strong>b. Colculation</strong> :</p></li><li><p><strong>binlog file gap between master and relay</strong><br><strong>a. Meaning</strong> : The number of binlog files in the relay log that are behind the upstream master.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>binlog pos</strong><br><strong>a. Meaning</strong> : The write offset of the latest relay log file.<br><strong>b. Colculation</strong> :</p></li><li><p><strong>read binlog event duration</strong><br><strong>a. Meaning</strong> : The duration that the relay log reads binlog event from the upstream MySQL (in seconds).<br><strong>b. Colculation</strong> :</p></li><li><p><strong>binlog event size</strong><br><strong>a. Meaning</strong> : The size of a single binlog event that the relay log writes into the disks.<br><strong>b. Colculation</strong> :</p></li></ol>`,13)]))}const h=t(s,[["render",i]]);export{p as __pageData,h as default};
