import{_ as s,c as a,o as t,a5 as n}from"./chunks/framework.JWlnoUZ4.js";const e="/assets/debug_m1.ODg1gKDo.png",F=JSON.parse('{"title":"TiDB run and debug on M1","description":"TiDB run and debug on M1","frontmatter":{"title":"TiDB run and debug on M1","description":"TiDB run and debug on M1"},"headers":[],"relativePath":"zh/work/tidb/07TiDB-源码阅读/7-1TiDB/01TiDB run and debug on M1.md","filePath":"zh/work/tidb/07TiDB-源码阅读/7-1TiDB/01TiDB run and debug on M1.md"}'),h={name:"zh/work/tidb/07TiDB-源码阅读/7-1TiDB/01TiDB run and debug on M1.md"};function l(p,i,r,k,d,o){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="tidb-run-and-debug-on-m1" tabindex="-1">TiDB run and debug on M1 <a class="header-anchor" href="#tidb-run-and-debug-on-m1" aria-label="Permalink to &quot;TiDB run and debug on M1&quot;">​</a></h1><h2 id="一、summary" tabindex="-1">一、Summary <a class="header-anchor" href="#一、summary" aria-label="Permalink to &quot;一、Summary&quot;">​</a></h2><p>        前不久刚换 Mac M1 时，不禁被自己的盲目的 “吃螃蟹🦀️行为” 蠢哭了。由于 M1 的是 arm 服务器，在做各种数据库测试时搭建本地环境很是不便，尤其是 DEBUG 数据库代码。</p><p>        <strong>我曾做过如下尝试：</strong></p><p>         1. 在远程家中 windows 搭建虚拟机，购买腾讯云服务器作为中间跳板机，使用 frp 软件穿透内网映射虚拟机 IP 至云服务器 IP：<br>          优点：Oracle、TiDB、MySQL、PG 随机搭建，不受平台、机器指令集限制。<br>          缺点：内网穿透效率效率受外网网速限制，有时在客户现场想做个实验直接卡死。<br>                     此外，更不便的是使用 vscode 的 remote code 功能或 TiDE 去 debug tidb 时灵是不灵。</p><p>         2. 在 M1 arch 架构长寻找运行 x86 软指令集的 VM，目前已经有些软件支持了，如：QEMU、ACVM、UTM、ToyVM 等，详情可浏览 <a href="https://www.youtube.com/watch?v=vm8fvNxByHU" target="_blank" rel="noreferrer">油管视频-Apple Silicon M1 Virtualization: Running x86 and ARM Virtual Machines</a>，结果不是运行效率低下几乎卡死，就是不定不稳定会影响数据库使用，投入产出比不高。</p><p>        <strong>最后惊喜的发现， TiDB 原生支持了 TiDB running on M1，<a href="https://docs.pingcap.com/zh/tidb/stable/quick-start-with-tidb#%E5%9C%A8-mac-os-%E4%B8%8A%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83" target="_blank" rel="noreferrer">详情参考官网</a></strong><br>          1. 起初，我曾尝试过直接在 M1 上 build tidb，当时应为依赖库有问题，尚未成功。在看了一篇 <a href="https://www.jianshu.com/p/e07928fb7577" target="_blank" rel="noreferrer">TiDB 作者文章-在 ARM64 上面运行 TiDB</a> 发现在 arm 上是应有成功经验的，于是重新尝试。<br>          2. 这是 build 直接就成功了，查阅 tidb 官方文档发现从 v5.2.2 开始已经提供了 tiup playground 实验集群支持。</p><h2 id="二、tiup-operations" tabindex="-1">二、Tiup Operations <a class="header-anchor" href="#二、tiup-operations" aria-label="Permalink to &quot;二、Tiup Operations&quot;">​</a></h2><p>         分别安装、启动可持久化 tidb 存储层数据的集群，名为 mycluster。启动之后 Dashboard、Promethus 均可观察到部分图像。但美中不足的是，当我想 tiup cluster cluster-name deploy topology.yaml 真正部署一个集群时，发现 tiup 之前基于 linux 自定义的 service，但 M1 中并不是一套指令，所以会报错。          <strong>不过已经能满足日常实验、DEBUG需求了</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --proto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;=https&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tlsv1.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sSf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://tiup-mirrors.pingcap.com/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tiup </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--tag</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mycluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playground</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v5.2.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --monitor</span></span></code></pre></div><h2 id="三、patching-tidb" tabindex="-1">三、Patching TiDB <a class="header-anchor" href="#三、patching-tidb" aria-label="Permalink to &quot;三、Patching TiDB&quot;">​</a></h2><h3 id="_3-1-改写代码" tabindex="-1">3.1 改写代码 <a class="header-anchor" href="#_3-1-改写代码" aria-label="Permalink to &quot;3.1 改写代码&quot;">​</a></h3><ol><li><p>Clone Repo 库代码；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/pingcap/tidb.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidb/util/printer</span></span></code></pre></div></li><li><p>手动将日志内容 logutil.BgLogger().Info(&quot;Welcome to TiDB version.&quot; 修改为 logutil.BgLogger().Info(&quot;Welcome to TiDB <strong>which is special Jan</strong> version.&quot;；</p></li></ol><h3 id="_3-2-手动-build-tidb" tabindex="-1">3.2 手动 Build TiDB <a class="header-anchor" href="#_3-2-手动-build-tidb" aria-label="Permalink to &quot;3.2 手动 Build TiDB&quot;">​</a></h3><p>        Build TiDB 观察到 Build TiDB Server successfully! 说明已经编译成功。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span></code></pre></div><h3 id="_3-3-手动-patch-tidb" tabindex="-1">3.3 手动 Patch TiDB <a class="header-anchor" href="#_3-3-手动-patch-tidb" aria-label="Permalink to &quot;3.3 手动 Patch TiDB&quot;">​</a></h3><p>        手动将新编译好的 tidb-server 二进制文件放入 tiup 启动目录。**注意：**替换 YOUR_COMPUTER_USERNAME 为自己真正用户名。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidb-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidb-server.version_jan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mv </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tidb-server.version_jan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Users/YOUR_COMPUTER_USERNAME/.tiup/components/tidb/v5.2.1/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mv </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tidb-server.bak</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidb-server.version_jan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidb-server</span></span></code></pre></div><h3 id="_3-4-日志验证" tabindex="-1">3.4 日志验证 <a class="header-anchor" href="#_3-4-日志验证" aria-label="Permalink to &quot;3.4 日志验证&quot;">​</a></h3><p>         启动 tidb 并验证改动是否生效。cat 观察到信息 “Welcome to TiDB which is special Jan version” 说明改动成功。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tiup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tag</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mycluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playground</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v5.2.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --monitor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Users/YOUR_COMPUTER_USERNAME/.tiup/data/mycluster/tidb-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cat </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tidb.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Jan version&quot;</span></span></code></pre></div><h2 id="四、tide-debug-tidb" tabindex="-1">四、TiDE DEBUG TiDB <a class="header-anchor" href="#四、tide-debug-tidb" aria-label="Permalink to &quot;四、TiDE DEBUG TiDB&quot;">​</a></h2><p>         VsCode 安装 TiDE 按照 与 TiDE Step-by-Step Guide 一步步操作便可 DEBUG 了，或者参考 <a href="https://blog.csdn.net/qq_35423190/article/details/115676932" target="_blank" rel="noreferrer">Aiky哇</a> 写的指引也挺好，基本内容一致。          <strong>下面展示一张我本地电脑 DEBUG 成功的图片，✌️！</strong><img src="`+e+'" alt="debug_m1"></p>',24)]))}const c=s(h,[["render",l]]);export{F as __pageData,c as default};
