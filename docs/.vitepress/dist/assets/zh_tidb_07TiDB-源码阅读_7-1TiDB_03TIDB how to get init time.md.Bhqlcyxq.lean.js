import{_ as i,c as a,a5 as t,o as n}from"./chunks/framework.PytyN_aB.js";const e="/assets/03code_cluster_id.NExgsgnZ.jpeg",l="/assets/04code_cluster_id_translate.BgCGiVj4.png",E=JSON.parse('{"title":"如果获取 TiDB 集群初始化时间","description":"","frontmatter":{},"headers":[],"relativePath":"zh/tidb/07TiDB-源码阅读/7-1TiDB/03TIDB how to get init time.md","filePath":"zh/tidb/07TiDB-源码阅读/7-1TiDB/03TIDB how to get init time.md"}'),h={name:"zh/tidb/07TiDB-源码阅读/7-1TiDB/03TIDB how to get init time.md"};function p(r,s,k,d,o,c){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="如果获取-tidb-集群初始化时间" tabindex="-1">如果获取 TiDB 集群初始化时间 <a class="header-anchor" href="#如果获取-tidb-集群初始化时间" aria-label="Permalink to &quot;如果获取 TiDB 集群初始化时间&quot;">​</a></h1><h2 id="一、前言" tabindex="-1">一、前言 <a class="header-anchor" href="#一、前言" aria-label="Permalink to &quot;一、前言&quot;">​</a></h2><p>        很久没写文章了，今天在同事的提示的情况下，处理了一个 TiDB 获取集群创建时间的问题，觉得有必要记录一下防止遗忘，也分享给大家。</p><h2 id="二、探索" tabindex="-1">二、探索 <a class="header-anchor" href="#二、探索" aria-label="Permalink to &quot;二、探索&quot;">​</a></h2><p>        首先，翻遍 TiDB 官方文档也没有找到能够查询 TiDB 集群初始化时间的方法。所有监控信息（Dashboard、Grafana）都只能仅查询各组件的 Startup Time，查询表的 Create Time 也不准确。<br>         其次，之前知道在集群初始化的时候 PD 会初始化一个 ClusterID 并持久化。即然，TiDB 官方没有提供查询接口，那能够分别集群的也许只有这一个信息了。最开始，一直在尝试使用 pd-ctl 的 <code>tiup ctl:v5.2.3 pd tso 1571036791</code> 直接转译 TSO ，但始终没有成功。<br>         最后在一位同事的提醒下，翻了下 PD 在初始化 Cluster_ID 时的源码,才成功解决问题。详情见 <strong>三、解决</strong> 部分。</p><h2 id="三、解决" tabindex="-1">三、解决 <a class="header-anchor" href="#三、解决" aria-label="Permalink to &quot;三、解决&quot;">​</a></h2><p>        看了下 PD 代码，在这个 <a href="https://github.com/tikv/pd/blob/88409b75418f0de46b62b7121627c23359b571b3/server/util.go#L86-L93" target="_blank" rel="noreferrer">initOrGetClusterID</a> 函数中，Cluster ID 是取当前时间的 Unix 时间戳左移 32 位，再加一个随机数获得。因此直接转译是无法获得正确时间的。</p><figure><img src="'+e+'" alt="03code_cluster_id" tabindex="0"><figcaption>03code_cluster_id</figcaption></figure><p>        做了一些小改动，逆着代码思路取出的时间基本符合要求，能确保年月日级别的准确性。大家也可以直接点击 <a href="http://www.dooccn.com/go/#id/7cdec42e1b4f7825c26d8a5343555b5a" target="_blank" rel="noreferrer">代码链接</a> 直接修改其中 Cluster ID 值获取结果。</p><figure><img src="'+l+`" alt="04code_cluster_id_translate" tabindex="0"><figcaption>04code_cluster_id_translate</figcaption></figure><p>        其实，之后尝试过右移 32 位再用 pd-ctl tso 转译还是不成功的。估计是因为 TiDB 的 TSO 由 “物理时间+逻辑时间” 组成，而 Cluster ID 的计算由 “物理时间+随机数” 组成吧，本身就不是一个东西吧。</p><h2 id="四、代码逻辑" tabindex="-1">四、代码逻辑 <a class="header-anchor" href="#四、代码逻辑" aria-label="Permalink to &quot;四、代码逻辑&quot;">​</a></h2><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //Get from pd.log (cat {{/path/to}}/pd.log|grep &quot;init cluster id&quot;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //  [2019/10/14 10:35:38.880 +00:00] [INFO] [server.go:212] [&quot;init cluster id&quot;] [cluster-id=6747551640615446306]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> history_ts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> uint64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6747551640615446306</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sub_history_ts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> history_ts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Unix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sub_history_ts),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;And the direct &gt;&gt;32 cluster-id is : &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sub_history_ts ,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;,you can try it by pd-ctl,but not correct!!!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //Although there is random number, but the year/month/day is still accurate </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // --&gt; 2019/10/14 vs 2019-10-14</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>        希望对大家有帮助！同时，我也把改文章分享在 <a href="https://asktug.com/t/topic/542865" target="_blank" rel="noreferrer">AskTUG-TiDB 如何获取集群创建时间</a> 欢迎交流。</p>`,14)]))}const u=i(h,[["render",p]]);export{E as __pageData,u as default};
