import{_ as e,c as t,a5 as i,o as l}from"./chunks/framework.PytyN_aB.js";const g=JSON.parse('{"title":"How to build logical plan","description":"","frontmatter":{},"headers":[],"relativePath":"en/tidb/01TiDB-Principle/1-2TiDB Optimizer/03How to build logical plan.md","filePath":"en/tidb/01TiDB-Principle/1-2TiDB Optimizer/03How to build logical plan.md"}'),o={name:"en/tidb/01TiDB-Principle/1-2TiDB Optimizer/03How to build logical plan.md"};function r(n,a,c,p,s,d){return l(),t("div",null,a[0]||(a[0]=[i('<h1 id="how-to-build-logical-plan" tabindex="-1">How to build logical plan <a class="header-anchor" href="#how-to-build-logical-plan" aria-label="Permalink to &quot;How to build logical plan&quot;">​</a></h1><h2 id="_1-one-sql-ll-be-translated-into-ast" tabindex="-1">1. One SQL&#39;ll be translated into AST <a class="header-anchor" href="#_1-one-sql-ll-be-translated-into-ast" aria-label="Permalink to &quot;1. One SQL&#39;ll be translated into AST&quot;">​</a></h2><p><img src="https://pic4.zhimg.com/80/v2-ada27a924bb54e304da9811094eacacf_1440w.webp" alt="overview-tidb-architecture"> note : pic from PingCAP website</p><p>From the pic above, SQL operateing processing can be seen as <strong>&quot;SQL(Client) --&gt; AST(Parser) --&gt; Logical Plan(Logical Optimzier) --&gt; Physical Plan(Physical Optimzier) --&gt; Execution(Executior) --&gt; Data(TiDB server return)&quot;</strong>. This part&#39;ll foucs on <strong>&quot;AST --&gt; Logical Plan&quot;</strong>.</p><p>So, <a href="https://github.com/pingcap/tidb/blob/eb35c773b512e4e00c42caf7f04ea7397d00c127/planner/core/planbuilder.go#L489" target="_blank" rel="noreferrer">PlanBuilder</a> builds Plan from an ast.Node, the one is partal of Logical Plan and different type of SQLs are dealed in different paths at <a href="https://github.com/pingcap/tidb/blob/eb35c773b512e4e00c42caf7f04ea7397d00c127/planner/core/planbuilder.go#L779" target="_blank" rel="noreferrer">func Build</a>.</p><h2 id="_2-123" tabindex="-1">2. 123 <a class="header-anchor" href="#_2-123" aria-label="Permalink to &quot;2. 123&quot;">​</a></h2>',6)]))}const u=e(o,[["render",r]]);export{g as __pageData,u as default};
